version: 2.1

orbs:
  docker: ledger/docker@volatile

aliases:
  - &filter_all_tags
    tags:
      only: /.*/
  - &dependencies_cache
    keys:
      - wallet-daemon-{{ .Branch }}-{{ checksum "build.sbt" }}
      - wallet-daemon-{{ .Branch }}-
      - wallet-daemon-

jobs:
  compile:
    docker:
      - image: ledgerhq/sbt-openjdk-8
        environment:
          JVM_OPTS: -Xmx3200m
          TERM: dumb
    steps:
      - checkout
      - restore_cache: *dependencies_cache
      - run:
          name: Compile
          command: sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt compile test:compile it:compile
      - save_cache:
          paths:
            - target
            - project/target
            - .ivy2
            - .sbt
          key: wallet-daemon-{{ .Branch }}-{{ checksum "build.sbt" }}
      - persist_to_workspace:
          root: /root/project
          paths:
            - .ivy2
            - .sbt

  scala_linter:
    docker:
      - image: ledgerhq/sbt-openjdk-8
    steps:
      - checkout
      - run:
          name: Run scalastyle
          command: sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt scalastyle

  integration_tests:
    docker:
      - image: ledgerhq/sbt-openjdk-8
        environment:
          JVM_OPTS: -Xmx3200m
          TERM: dumb
    steps:
      - checkout
      - restore_cache: *dependencies_cache
      - command: apt-get install -yq libpq-dev
      - run:
          name: Run integration tests
          command: sbt -Dsbt.ivy.home=.ivy2 -sbt-dir .sbt it:test


workflows:
  build_test_and_publish:
    jobs:
      - compile:
          filters: *filter_all_tags
      - scala_linter:
          filters: *filter_all_tags
      - integration_tests:
          requires:
            - compile
          filters: *filter_all_tags
      - docker/build_image:
          requires:
            - compile
          after_checkout:
            - attach_workspace:
                at: /home/circleci/project
            - run:
                name: Set version environment variable
                command: echo "export COMMIT_HASH=$(git rev-parse HEAD)" >> $BASH_ENV
          filters: *filter_all_tags
      - docker/test_image:
          requires:
            - docker/build_image
          filters: *filter_all_tags
      - docker/publish_image:
          requires:
            - docker/test_image
          filters:
            branches:
              only:
                - master
                - master-drop2
                - develop
                - develop-drop2
                - release_candidate
                - release_candidate_drop2
            tags:
              only: /.*/
